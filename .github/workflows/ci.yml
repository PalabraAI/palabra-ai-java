name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  GRADLE_VERSION: 8.5

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        java: [17, 21]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: 'gradle'
    
    - name: Grant execute permission for gradlew
      if: runner.os != 'Windows'
      run: chmod +x gradlew
      
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Build with Gradle
      run: ./gradlew build -x test --no-daemon
      
    - name: Run unit tests
      run: ./gradlew test --tests "*Test" --no-daemon
      
    - name: Run integration tests
      env:
        PALABRA_CLIENT_ID: ${{ secrets.PALABRA_CLIENT_ID }}
        PALABRA_CLIENT_SECRET: ${{ secrets.PALABRA_CLIENT_SECRET }}
      run: ./gradlew test --tests "*IntegrationTest" --no-daemon
      
    - name: Generate test report
      run: ./gradlew jacocoTestReport --no-daemon
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-java${{ matrix.java }}
        path: |
          build/reports/tests/
          build/reports/jacoco/
        retention-days: 7

  javadoc:
    name: Generate JavaDoc
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
        
    - name: Generate JavaDoc
      run: ./gradlew javadoc --no-daemon
      
    - name: Upload JavaDoc
      uses: actions/upload-artifact@v4
      with:
        name: javadoc
        path: build/docs/javadoc/
        retention-days: 30

  check-cli:
    name: Test CLI
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
        
    - name: Build CLI
      run: ./gradlew build -x test --no-daemon
      
    - name: Test CLI help commands
      run: |
        echo "Testing main help..."
        ./gradlew run --args="--help" --no-daemon
        
        echo "Testing file command help..."
        ./gradlew run --args="file --help" --no-daemon
        
        echo "Testing device command help..."
        ./gradlew run --args="device --help" --no-daemon
